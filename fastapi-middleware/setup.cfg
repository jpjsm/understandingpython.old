[metadata]
name = fastapi middleware learning
description = "Sample code to understand fastapi middleware and exception handling"
long_description = file: README.md
long_description_content_type = text/markdown; charset=UTF-8
url = https://example.com/fastapi-middleware
author = Juan Pablo Jofre
author_email = juan.pablo.jofre@dell.com
license = Dell License
license_files = LICENSE
classifiers =
    Development Status :: 2 - Pre-Alpha
    Environment :: Console
    Environment :: Win32 (MS Windows)
    Intended Audience :: Developers
    License :: Dell License
    Natural Language :: English
    Operating System :: POSIX :: Linux
    Operating System :: MacOS :: MacOS X
    Operating System :: Microsoft :: Windows :: Windows 10
    Programming Language :: Python :: 3.10
    Topic :: Software Development :: Libraries
    Topic :: Software Development :: Libraries :: Python Modules
    Topic :: System :: Logging
    Topic :: System :: Monitoring
    Topic :: Utilities
project_urls = 
    Documentation = https://example.com/blob/main/README.md
    Source = https://example.com/git/kulshan
    Tracker = TBD

[options]
package_dir = 
    = src
packages = find:

platforms = any
include_package_data = True
python_requires = >=3.10

install_requires = file:requirements.in

[options.packages.find]
where = src

[flake8]
# In cases where a flake check is raised inside a docstring that can legitimately be
# silenced, `noqa` annotations can be attached to the tail of the docstring.

# Allowed noqa:
#   ABS101: Never for top-of-file imports in normal code. Only where relative imports
#       makes natural sense.
#   DAR401: Never to suppress legitimate lack of documentation. Only for
#       raising by variable.
#   N802: Never to purposefully violate naming standards. Only for when overriding
#       existing method names from library code.

# Add a comment above each ignored code detailing what the code means.
ignore =
    # Class attributes that look like builtins. (e.g. Request.bytes())
    A003,
    # Missing docstring in magic method.
    D105,
    # First line of docstring must be imperative. A little too strongly.
    D401,
    # Darglint cannot detect implicit exceptions propagated from inside function bodies.
    DAR402,
    # Darglint is reporting :key: for kwargs as excess documentation.
    DAR501,
    # Explicit exc_info to logger.exception(...) is useful in places.
    G202,
    # Line break before binary operator (e.g. "\n    and ..." on multi-line condition)
    W503

per-file-ignores =
    src/kulshan/kmetrics/middleware.py: I100

enable-extensions=G
max-line-length = 88

# flake8-bugbear
extend-select = B9

# flake8-docstrings
ignore-decorators=overrides

# flake8-noqa
noqa-require-code = True

# flake8-rst-docstrings
docstring_style=sphinx
rst-roles =
    class,
    func,
    ref,
rst-directives =
    envvar,
    exception,
    seealso,
    todo,

# mccabe
max-complexity = 12

[tool.black]
line-length = 88